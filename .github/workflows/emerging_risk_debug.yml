name: Debug Emerging Risk Manually

on:
  workflow_dispatch:  # only run when manually triggered

jobs:
  debug-update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install lxml[html_clean]

    - name: Create Output Directory
      run: mkdir -p online_sentiment/output

    - name: Run Emerging Risk News script
      run: |
        echo "Running EmergingRiskNews.py..."
        python EmergingRiskNews.py || echo "EmergingRiskNews.py failed!"

    - name: Debug - list output files
      run: |
        echo "Checking output directory contents:"
        ls -lh online_sentiment/output
        echo "Checking CSV file size:"
        stat online_sentiment/output/emerging_risks_online_sentiment.csv || echo "CSV file not found!"

    - name: Debug - show last few lines of CSV
      run: |
        echo "Displaying last 10 lines of CSV:"
        tail -n 10 online_sentiment/output/emerging_risks_online_sentiment.csv || echo "CSV file not found!"

    - name: Check for changes
      id: check_changes
      run: |
        git status
        git diff --stat
        git status --porcelain
        if [[ -z $(git status --porcelain) ]]; then
          echo "No changes detected."
          echo "has_changes=false" >> $GITHUB_ENV
        else
          echo "Changes detected."
          echo "has_changes=true" >> $GITHUB_ENV
        fi

    - name: Update Daily Refresh Log
      run: |
        echo "Last refresh: $(date)" > last_refresh.txt
        cat last_refresh.txt

    - name: Push updates
      if: env.has_changes == 'true'
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "noreply@github.com"
        git stash
        git pull --rebase origin main
        git stash pop || echo "No stashed changes to apply"
        git add .
        git commit -m "Manual debug run: $(date)" || echo "No changes to commit"
        git push origin main || echo "Git push failed!"
